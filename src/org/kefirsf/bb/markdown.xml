<?xml version="1.0" encoding="utf-8"?>
<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns="http://kefirsf.org/kefirbb/schema"
               xsi:schemaLocation="http://kefirsf.org/kefirbb/schema http://kefirsf.org/kefirbb/schema/kefirbb-1.2.xsd">
    <scope name="ROOT" ignoreText="true">
        <code name="paragraph">
            <pattern><bol/><var scope="paragraphScope"/><blankline/></pattern>
            <template>&lt;p&gt;<var/>&lt;/p&gt;</template>
        </code>
        <code name="h1" priority="1">
            <pattern><bol/><var scope="escapeHtml"/><eol/>=<var name="junk" regex="=*"/><eol/></pattern>
            <template>&lt;h1&gt;<var/>&lt;/h1&gt;</template>
        </code>
        <code name="h2" priority="1">
            <pattern><bol/><var scope="escapeHtml"/><eol/>-<var name="junk" regex="\-*"/><eol/></pattern>
            <template>&lt;h2&gt;<var/>&lt;/h2&gt;</template>
        </code>
        <code name="hn" priority="1">
            <pattern><var name="count" regex="#{1,6}"/> <var scope="escapeHtml"/><var name="junk" regex="\s#+"/><eol/></pattern>
            <pattern><var name="count" regex="#{1,6}"/> <var scope="escapeHtml"/><eol/></pattern>
            <template>&lt;h<var name="count" function="length"/>&gt;<var/>&lt;/h<var name="count" function="length"/>&gt;</template>
        </code>
        <code name="hr" priority="1">
            <pattern><bol/><var regex="\*(\s\*){2,}"/><eol/></pattern>
            <pattern><bol/><var regex="\*{3,}"/><eol/></pattern>
            <pattern><bol/><var regex="\-(\s\-){2,}"/><eol/></pattern>
            <pattern><bol/><var regex="\-{3,}"/><eol/></pattern>
            <template>&lt;hr/&gt;</template>
        </code>
        <code name="codeblock" priority="1">
            <pattern><constant value="    " ghost="true"/><var scope="codeBlockScope"/></pattern>
            <pattern><constant value="&#09;" ghost="true"/><var scope="codeBlockScope"/></pattern>
            <template>&lt;pre&gt;&lt;code&gt;<var/>&lt;/code&gt;&lt;/pre&gt;</template>
        </code>
    </scope>

    <scope name="codeBlockScope" strong="true">
        <code name="codeString" priority="2">
            <pattern>    <var scope="safeXml"/><eol/><var name="nl" regex="\s{4}|\t|([\s\t]*\n)" ghost="true"/></pattern>
            <pattern>&#09;<var scope="safeXml"/><eol/><var name="nl" regex="\s{4}|\t|([\s\t]*\n)" ghost="true"/></pattern>
            <template><var/>&#x0A;</template>
        </code>
        <code name="emptyString">
            <pattern><var regex="[\s\t]*"/><eol/></pattern>
            <template>&#x0A;</template>
        </code>
        <code name="endString" priority="1">
            <pattern><constant value="    "/><var scope="safeXml"/><eol/></pattern>
            <pattern><constant value="&#09;"/><var scope="safeXml"/><eol/></pattern>
            <template><var/></template>
        </code>
    </scope>

    <scope name="paragraphScope" parent="escapeMarkdown">
        <code name="br">
            <pattern>  <eol/></pattern>
            <template>&lt;br/&gt;</template>
        </code>
        <code name="em">
            <pattern>*<var inherit="true"/>*</pattern>
            <pattern>_<var inherit="true"/>_</pattern>
            <template>&lt;em&gt;<var/>&lt;/em&gt;</template>
        </code>
        <code name="strong" priority="1">
            <pattern>**<var inherit="true"/>**</pattern>
            <pattern>__<var inherit="true"/>__</pattern>
            <template>&lt;strong&gt;<var/>&lt;/strong&gt;</template>
        </code>
        <code name="link">
            <pattern>[<var name="content" inherit="true"/>](<url local="true"/> "<var name="title" scope="safeXml"/>")</pattern>
            <pattern>[<var name="content" scope="escapeMarkdown"/>](<url local="true"/>)</pattern>
            <template>&lt;a href="<var name="url"/>"<if name="title"> title="<var name="title"/>"</if>&gt;<var name="content"/>&lt;/a&gt;</template>
        </code>
        <code name="autoLink" priority="1">
            <pattern>&lt;<url/>&gt;</pattern>
            <template>&lt;a href="<var name="url"/>"&gt;<var name="url"/>&lt;/a&gt;</template>
        </code>
        <code name="emailLink">
            <pattern>&lt;<email/>&gt;</pattern>
            <template>&lt;a href="mailto:<var name="email"/>"&gt;<var name="email"/>&lt;/a&gt;</template>
        </code>
        <code name="code">
            <pattern>`` <var scope="safeXml"/> ``</pattern>
            <pattern>``<var scope="safeXml"/>``</pattern>
            <pattern>`<var scope="safeXml"/>`</pattern>
            <template>&lt;code&gt;<var/>&lt;/code&gt;</template>
        </code>
        <code name="img">
            <pattern>![<var name="alt" scope="escapeHtml"/>](<url local="true"/> &quot;<var name="title" scope="escapeHtml"/>&quot;)</pattern>
            <pattern>![<var name="alt" scope="escapeHtml"/>](<url local="true"/>)</pattern>
            <pattern>!(<url local="true"/> &quot;<var name="title" scope="escapeHtml"/>&quot;)</pattern>
            <pattern>!(<url local="true"/>)</pattern>
            <template>&lt;img src="<var name="url"/>"<if name="alt"> alt="<var name="alt"/>"</if><if name="title"> title="<var name="title"/>"</if>/&gt;</template>
        </code>
    </scope>

    <!-- Escape Markdown slashes -->
    <scope name="escapeMarkdown" parent="escapeHtml">
        <code>
            <pattern>\\</pattern>
            <template>\</template>
        </code>
        <code>
            <pattern>\`</pattern>
            <template>`</template>
        </code>
        <code>
            <pattern>\*</pattern>
            <template>*</template>
        </code>
        <code>
            <pattern>\_</pattern>
            <template>_</template>
        </code>
        <code>
            <pattern>\{</pattern>
            <template>{</template>
        </code>
        <code>
            <pattern>\}</pattern>
            <template>}</template>
        </code>
        <code>
            <pattern>\[</pattern>
            <template>[</template>
        </code>
        <code>
            <pattern>\]</pattern>
            <template>]</template>
        </code>
        <code>
            <pattern>\(</pattern>
            <template>(</template>
        </code>
        <code>
            <pattern>\)</pattern>
            <template>)</template>
        </code>
        <code>
            <pattern>\#</pattern>
            <template>#</template>
        </code>
        <code>
            <pattern>\+</pattern>
            <template>+</template>
        </code>
        <code>
            <pattern>\-</pattern>
            <template>-</template>
        </code>
        <code>
            <pattern>\.</pattern>
            <template>.</template>
        </code>
        <code>
            <pattern>\!</pattern>
            <template>!</template>
        </code>
    </scope>

    <!-- XML escape symbols -->
    <scope name="safeXml">
        <code priority="-2">
            <pattern>&apos;</pattern>
            <template>&amp;apos;</template>
        </code>
        <code priority="-2">
            <pattern>&lt;</pattern>
            <template>&amp;lt;</template>
        </code>
        <code priority="-2">
            <pattern>&gt;</pattern>
            <template>&amp;gt;</template>
        </code>
        <code priority="-2">
            <pattern>&quot;</pattern>
            <template>&amp;quot;</template>
        </code>
        <code priority="-2">
            <pattern>&amp;</pattern>
            <template>&amp;amp;</template>
        </code>
    </scope>

    <!-- Scope for escaping some symbols -->
    <scope name="escapeHtml" parent="safeXml">
        <!-- Ignore unknown tags -->
        <code priority="-1">
            <pattern>&lt;<junk/>&gt;</pattern>
            <template/>
        </code>

        <!-- Comment -->
        <code name="comment">
            <pattern>&lt;!--<junk/>&gt;</pattern>
            <template/>
        </code>

        <!-- special HTML characters -->
        <code>
            <pattern>&amp;<var regex="\w+"/>;</pattern>
            <template>&amp;<var/>;</template>
        </code>
        <code>
            <pattern>&amp;#<var regex="\d+"/>;</pattern>
            <template>&amp;#<var/>;</template>
        </code>
    </scope>
</configuration>